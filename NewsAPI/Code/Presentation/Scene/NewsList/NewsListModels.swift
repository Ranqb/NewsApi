//
//  NewsListModels.swift
//  NewsAPI
//
//  Created by Andrey Nedov on 12/08/2019.
//  Copyright (c) 2019 Andrey Nedov. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

typealias DisplayedArticle = NewsList.FetchNews.ViewModel.Success.DisplayedArticle

enum NewsList
{
    // MARK: Use cases
    
    enum FetchNews
    {
        struct Request
        {
            let refresh: Bool
        }
        struct Response
        {
            let result: Result<[ArticleModel]?>
            let update: Bool
        }
        struct ViewModel
        {
            struct Success {
                struct DisplayedArticle {
                    let author: String
                    let title: String
                    let description: String
                    let url: String
                    let urlToImage: String
                    let publishedAt: String
                    let content: String
                    let source: String
                    init(with articleModel: ArticleModel) {
                        author = articleModel.author ?? ""
                        title = articleModel.title ?? ""
                        description = articleModel.description ?? ""
                        url = articleModel.url ?? ""
                        urlToImage = articleModel.urlToImage ?? ""
                        publishedAt = articleModel.publishedAt ?? ""
                        content = articleModel.content ?? ""
                        source = articleModel.source?.name ?? ""
                    }
                }
                let displayedNews: [DisplayedArticle]
            }
            struct Failure {
                let errorViewModel: ErrorViewModel
            }
        }
    }
    enum SelectArticle{
        struct Request {
            let article: DisplayedArticle
        }
        struct Response {}
        struct ViewModel {}
    }
}

