//
//  ArticleDetailViewController.swift
//  NewsAPI
//
//  Created by Andrey Nedov on 12/08/2019.
//  Copyright (c) 2019 Andrey Nedov. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ArticleDetailDisplayLogic: class
{
    func displayArticle(viewModel: ArticleDetail.FetchArticle.ViewModel.Success)
}

class ArticleDetailViewController: ViewController
{
    var interactor: ArticleDetailBusinessLogic?
    var router: (NSObjectProtocol & ArticleDetailRoutingLogic & ArticleDetailDataPassing)?
    
    private var article: DisplayedArticle?
    
    // MARK: IBOutlets
    
    @IBOutlet var tableView: UITableView!
    private let dataSourceCount = 2
    
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
    {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder)
    {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    private func setup()
    {
        let viewController = self
        let interactor = ArticleDetailInteractor()
        let presenter = ArticleDetailPresenter()
        let router = ArticleDetailRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad()
    {
        super.viewDidLoad()
        fetchArticle()
        setupTableView()
    }
    
    // MARK: Private Helpers
    
    private func setupTableView() {
        tableView.dataSource = self
        tableView.delegate = self
        tableView.register(ArticleDetailCell.self)
        tableView.register(ArticleDetailTitleCell.self)
        tableView.tableFooterView = UIView(frame: .zero)
        tableView.backgroundColor = defaultBackgroundColor
        tableView.estimatedRowHeight = 200
    }
    
    // MARK: Logic
    
    func fetchArticle()
    {
        displayLoading()
        let request = ArticleDetail.FetchArticle.Request()
        interactor?.fetchArticle(request: request)
    }

}

// MARK: ArticleDetailDisplayLogic
extension ArticleDetailViewController: ArticleDetailDisplayLogic {
    
    func displayArticle(viewModel: ArticleDetail.FetchArticle.ViewModel.Success)
    {
        displayContent()
        article = viewModel.displayedArticle
        tableView.reloadData()
    }
}

extension ArticleDetailViewController: UITableViewDelegate, UITableViewDataSource {
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return dataSourceCount
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        if indexPath.row == 0 {
            let cell: ArticleDetailTitleCell = tableView.dequeue(for: indexPath)
            cell.configure(article)
            return cell
        }else{
            let cell: ArticleDetailCell = tableView.dequeue(for: indexPath)
            cell.configure(article)
            return cell
        }
    }

}

